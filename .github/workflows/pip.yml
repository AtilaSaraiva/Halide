name: Build PyPI package
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
concurrency:
  group: '${{ github.workflow }}-${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true
jobs:
  build-binary-dependencies:
    name: Build LLVM & Halide
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
      - uses: actions/checkout@v3
        with:
          path: Halide
      - uses: actions/checkout@v3
        with:
          repository: llvm/llvm-project
          path: llvm-project
          # TODO: set the ref to match the major version of Halide
      - name: Install dependencies
        run: |
          yum makecache
          yum install -y ninja-build zlib-static
      - name: Configure LLVM
        run: >
          cmake
          -G Ninja
          -S llvm-project/llvm
          -B build/llvm
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_PREFIX_PATH=$PWD/local
          -DCMAKE_INSTALL_PREFIX=$PWD/local
          -DLLVM_ENABLE_PROJECTS="clang;lld"
          -DLLVM_TARGETS_TO_BUILD="X86;ARM;NVPTX;AArch64;Mips;Hexagon;WebAssembly"
          -DLLVM_BUILD_32_BITS=OFF
          -DLLVM_ENABLE_ASSERTIONS=ON
          -DLLVM_ENABLE_EH=ON
          -DLLVM_ENABLE_LIBXML2=OFF
          -DLLVM_ENABLE_RTTI=ON
          -DLLVM_ENABLE_TERMINFO=OFF
          -DLLVM_ENABLE_ZSTD=OFF
          -DZLIB_LIBRARY=/usr/lib64/libz.a
      - name: Build LLVM
        run: cmake --build build/llvm --target install
      - name: Configure Halide
        run: >
          cmake
          -G Ninja
          -S Halide
          -B build/Halide
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=$PWD/local
          -DCMAKE_PREFIX_PATH=$PWD/local
          -DWITH_DOCS=NO
          -DWITH_PYTHON_BINDINGS=NO
          -DWITH_TESTS=NO
          -DWITH_TUTORIALS=NO
          -DWITH_UTILS=NO
          -DZLIB_LIBRARY=/usr/lib64/libz.a
      - name: Build Halide
        run: cmake --build build/Halide --target install
      - name: Upload binary dependencies
        uses: actions/upload-artifact@v3
        with:
          name: binary-dependencies
          path: local
  build-wheels:
    name: Build wheels (${{ matrix.python }})
    needs: build-binary-dependencies
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/manylinux2014_x86_64
      env:
        PYTHON: /opt/python/${{ matrix.python }}/bin/python
    strategy:
      matrix:
        python:
          # The following list is exhaustive, but the commented ABIs are
          # unsupported. (<3.8 or PyPy)
          # - cp36-cp36m
          # - cp37-cp37m
          - cp38-cp38
          - cp39-cp39
          - cp310-cp310
          # - cp311-cp311  # unreleased
          # - pp37-pypy37_pp73
          # - pp38-pypy38_pp73
          # - pp39-pypy39_pp73
    steps:
      - uses: actions/checkout@v3
        with:
          path: Halide
      - name: Download binary dependencies
        uses: actions/download-artifact@v3
        with:
          name: binary-dependencies
      - name: Build wheels
        run: $PYTHON -m build Halide/python_bindings
        env:
          CMAKE_PREFIX_PATH: ${{ github.workspace }}/local
